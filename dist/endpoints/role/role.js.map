{"version":3,"file":"role.js","names":["_nodeServerEngine","require","_role","_role2","_role3","_middleware","createRoleEndpoint","exports","Endpoint","path","method","EndpointMethod","POST","handler","req","res","role","createRoleTable","body","status","json","message","error","ROLE_CREATION_ERROR","authType","EndpointAuthType","JWT","validator","createRoleValidator","middleware","checkPermission","getRoleEndpoint","GET","getAllRolesHandler","ROLE_NOT_FOUND","ROLE_GET_ERROR","getRoleDetailsEndpoint","roleId","params","getRoleDetailsHandler","updateRoleEndpoint","PUT","updateRole","updateRolesHandler","id","ROLE_UPDATE_ERROR","updateRoleValidator","deleteRoleEndpoint","DELETE","deleteRoleHandler","ROLE_DELETE_ERROR","deleteRoleValidator","createPermissionEndpoint","permission","createPermissionHandler","PERMISSION_CREATION_ERROR","createPermissionValidator","getPermissionEndpoint","getAllPermissionHandler","PERMISSION_NOT_FOUND","PERMISSION_GET_ERROR","updatePermissionEndpoint","updatePermission","updatePermissionHandler","action","PERMISSION_UPDATE_ERROR","updatePermissionValidator","deletePermissionEndpoint","deletePermissionHandler","PERMISSION_DELETE_ERROR","deletePermissionValidator"],"sources":["../../../src/endpoints/role/role.ts"],"sourcesContent":["import { Endpoint, EndpointAuthType, EndpointMethod } from 'node-server-engine';\r\nimport {\r\n  createPermissionHandler,\r\n  getAllPermissionHandler,\r\n  updatePermissionHandler,\r\n  deletePermissionHandler,\r\n  createRoleTable,\r\n  getRoleDetailsHandler,\r\n  getAllRolesHandler,\r\n  updateRolesHandler,\r\n  deleteRoleHandler\r\n} from './role.handler';\r\nimport {\r\n  PERMISSION_CREATION_ERROR,\r\n  PERMISSION_NOT_FOUND,\r\n  PERMISSION_UPDATE_ERROR,\r\n  PERMISSION_DELETE_ERROR,\r\n  PERMISSION_GET_ERROR,\r\n  ROLE_CREATION_ERROR,\r\n  ROLE_GET_ERROR,\r\n  ROLE_NOT_FOUND,\r\n  ROLE_UPDATE_ERROR,\r\n  ROLE_DELETE_ERROR\r\n} from './role.const';\r\nimport {\r\n  createPermissionValidator,\r\n  updatePermissionValidator,\r\n  deletePermissionValidator,\r\n  createRoleValidator,\r\n  updateRoleValidator,\r\n  deleteRoleValidator\r\n} from './role.validator';\r\nimport { checkPermission } from 'middleware';\r\n\r\n// Create Role Endpoint\r\nexport const createRoleEndpoint = new Endpoint({\r\n  path: '/roles',\r\n  method: EndpointMethod.POST,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const role = await createRoleTable(req, req.body);\r\n\r\n      res.status(201).json({ message: 'Role created successfully', role });\r\n    } catch (error) {\r\n      res.status(500).json({ message: ROLE_CREATION_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: createRoleValidator,\r\n  middleware: [checkPermission('CreateRole')]\r\n});\r\n\r\n// Get All Permission Endpoint\r\nexport const getRoleEndpoint = new Endpoint({\r\n  path: '/roles',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const role = await getAllRolesHandler();\r\n\r\n      if (!role) {\r\n        res.status(404).json({ message: ROLE_NOT_FOUND });\r\n        return;\r\n      }\r\n\r\n      res.status(200).json({ message: 'Role retrieved successfully', role });\r\n    } catch (error) {\r\n      res.status(500).json({ message: ROLE_GET_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: {},\r\n  middleware: [checkPermission('GetRole')]\r\n});\r\n\r\n//getroleDetails\r\nexport const getRoleDetailsEndpoint = new Endpoint({\r\n  path: '/roles/:roleId',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    const { roleId } = req.params;\r\n\r\n    try {\r\n      const role = await getRoleDetailsHandler(roleId);\r\n\r\n      res.status(200).json({ message: 'Role retrieved successfully', role });\r\n    } catch (error) {\r\n      res.status(404).json({ message: ROLE_NOT_FOUND, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: {},\r\n  middleware: [checkPermission('GetRole')]\r\n});\r\n\r\n\r\n// update Role endpoint\r\nexport const updateRoleEndpoint = new Endpoint({\r\n  path: '/roles/:id',\r\n  method: EndpointMethod.PUT,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const updateRole = await updateRolesHandler(req, req.params.id, req.body);\r\n      res.status(200).json({ message: 'Role updated successfully', updateRole });\r\n    } catch (error) {\r\n      res.status(500).json({ message: ROLE_UPDATE_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: updateRoleValidator,\r\n  middleware: [checkPermission('UpdateRole')]\r\n});\r\n\r\n// delete Role endpoint\r\nexport const deleteRoleEndpoint = new Endpoint({\r\n  path: '/roles/:id',\r\n  method: EndpointMethod.DELETE,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      await deleteRoleHandler(req, req.params.id);\r\n      res.status(200).json({ message: 'Role deleted successfully' });\r\n    } catch (error) {\r\n      res.status(500).json({ message: ROLE_DELETE_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: deleteRoleValidator,\r\n  middleware: [checkPermission('DeleteRole')]\r\n});\r\n\r\n\r\n// Create Permission Endpoint\r\nexport const createPermissionEndpoint = new Endpoint({\r\n  path: '/permissions',\r\n  method: EndpointMethod.POST,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const permission = await createPermissionHandler(req, req.body);\r\n\r\n      res.status(201).json({ message: 'Permission created successfully', permission });\r\n    } catch (error) {\r\n      res.status(500).json({ message: PERMISSION_CREATION_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: createPermissionValidator,\r\n  middleware: [checkPermission('CreatePermission')]\r\n});\r\n\r\n\r\n// Get All Permission Endpoint\r\nexport const getPermissionEndpoint = new Endpoint({\r\n  path: '/permissions',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const permission = await getAllPermissionHandler();\r\n\r\n      if (!permission) {\r\n        res.status(404).json({ message: PERMISSION_NOT_FOUND });\r\n        return;\r\n      }\r\n\r\n      res.status(200).json({ message: 'Permission retrieved successfully', permission });\r\n    } catch (error) {\r\n      res.status(500).json({ message: PERMISSION_GET_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: {},\r\n  middleware: [checkPermission('GetPermission')]\r\n});\r\n\r\n// update Permission endpoint\r\nexport const updatePermissionEndpoint = new Endpoint({\r\n  path: '/permissions/:action',\r\n  method: EndpointMethod.PUT,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const updatePermission = await updatePermissionHandler(req, req.params.action, req.body);\r\n      res.status(200).json({ message: 'Permission updated successfully', updatePermission });\r\n    } catch (error) {\r\n      res.status(500).json({ message: PERMISSION_UPDATE_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: updatePermissionValidator,\r\n  middleware: [checkPermission('UpdatePermission')]\r\n});\r\n\r\n// delete Permission endpoint\r\nexport const deletePermissionEndpoint = new Endpoint({\r\n  path: '/permissions/:action',\r\n  method: EndpointMethod.DELETE,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      await deletePermissionHandler(req, req.params.action);\r\n      res.status(200).json({ message: 'Permission deleted successfully' });\r\n    } catch (error) {\r\n      res.status(500).json({ message: PERMISSION_DELETE_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: deletePermissionValidator,\r\n  middleware: [checkPermission('DeletePermission')]\r\n});\r\n"],"mappings":"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","ignoreList":[]}