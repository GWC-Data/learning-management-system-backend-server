{"version":3,"file":"courses.js","names":["_nodeServerEngine","require","_multer","_interopRequireDefault","_courses","_courses2","_course","_middleware","upload","multer","storage","memoryStorage","createCourseEndpoint","exports","Endpoint","path","method","EndpointMethod","POST","authType","EndpointAuthType","JWT","validator","createCourseValidator","middleware","checkPermission","single","handler","req","res","console","log","headers","body","file","courseName","status","json","error","response","createCourseHandler","success","message","courseId","courseImg","COURSE_CREATION_ERROR","getAllCourseEndpoint","GET","course","getAllCoursesHandler","COURSE_NOT_FOUND","COURSE_GET_ERROR","NONE","getCourseByIdEndpoint","params","id","getCourseByIdHandler","getCourseByIdValidator","updateCourseByIdEndpoint","PUT","updateCourse","updateCourseHandler","COURSE_UPDATE_ERROR","updateCourseValidator","deleteCourseEndpoint","DELETE","deleteCourseHandler","COURSE_DELETION_ERROR","deleteCourseValidator"],"sources":["../../../src/endpoints/courses/courses.ts"],"sourcesContent":["import { Endpoint, EndpointAuthType, EndpointMethod } from 'node-server-engine';\r\nimport multer from 'multer';\r\nimport { Request, Response } from 'express';\r\nimport {\r\n  createCourseHandler,\r\n  updateCourseHandler,\r\n  getCourseByIdHandler,\r\n  deleteCourseHandler,\r\n  getAllCoursesHandler\r\n} from './courses.handler';\r\n\r\nimport {\r\n  createCourseValidator,\r\n  updateCourseValidator,\r\n  deleteCourseValidator,\r\n  getCourseByIdValidator\r\n} from './courses.validator';\r\n\r\nimport {\r\n  COURSE_NOT_FOUND,\r\n  COURSE_CREATION_ERROR,\r\n  COURSE_UPDATE_ERROR,\r\n  COURSE_DELETION_ERROR,\r\n  COURSE_GET_ERROR\r\n} from './course.const';\r\nimport { checkPermission } from 'middleware';\r\n// Multer Memory Storage for handling file uploads\r\nconst upload = multer({ storage: multer.memoryStorage() });\r\n\r\n// Create Course Endpoint\r\nexport const createCourseEndpoint = new Endpoint({\r\n  path: '/course',\r\n  method: EndpointMethod.POST,\r\n  authType: EndpointAuthType.JWT,\r\n  validator: createCourseValidator,\r\n  middleware: [checkPermission(\"CreateCourse\"), upload.single('courseImg')],\r\n\r\n  handler: async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      console.log('Incoming request:', {\r\n        headers: req.headers,\r\n        body: req.body,\r\n        file: req.file\r\n      });\r\n\r\n      // Ensure courseName is present\r\n      if (!req.body.courseName) {\r\n        res.status(400).json({ error: 'Course Name is required' });\r\n        return;\r\n      }\r\n\r\n      // Call handler with request body and file\r\n      const response = await createCourseHandler(req.body, req, req.file);\r\n\r\n      if (!response.success) {\r\n        res.status(400).json({ error: response.message });\r\n        return;\r\n      }\r\n\r\n      res.status(200).json({\r\n        message: 'Course created successfully',\r\n        courseId: response.courseId,\r\n        courseImg: response.courseImg\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating course category:', error);\r\n      res.status(500).json({ message: COURSE_CREATION_ERROR, error });\r\n    }\r\n  }\r\n});\r\n\r\n// Get All Course Endpoint\r\nexport const getAllCourseEndpoint = new Endpoint({\r\n  path: '/course',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const course = await getAllCoursesHandler();\r\n\r\n      if (!course) {\r\n        res.status(404).json({ message: COURSE_NOT_FOUND });\r\n        return;\r\n      }\r\n\r\n      res.status(200).json({\r\n        message: 'Course retrieved successfully',\r\n        course\r\n      });\r\n    } catch (error) {\r\n      res.status(500).json({ message: COURSE_GET_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.NONE,\r\n  validator: {},\r\n  // middleware: [checkPermission(\"GetCourse\")]\r\n});\r\n\r\n// Get Course By ID Endpoint\r\nexport const getCourseByIdEndpoint = new Endpoint({\r\n  path: '/course/:id',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      const courseId = req.params.id; // Ensure this is used correctly\r\n      const course = await getCourseByIdHandler(courseId);\r\n      res.status(200).json({\r\n        message: 'Course retrieved successfully',\r\n        course\r\n      });\r\n    } catch (error) {\r\n      res.status(404).json({ message: COURSE_NOT_FOUND, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.NONE,\r\n  validator: getCourseByIdValidator,\r\n  // middleware: [checkPermission(\"GetCourse\")]\r\n\r\n});\r\n\r\n// Update course Endpoint\r\nexport const updateCourseByIdEndpoint = new Endpoint({\r\n  path: '/course/:id',\r\n  method: EndpointMethod.PUT,\r\n\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const updateCourse = await updateCourseHandler(req.params.id, req, req.body,);\r\n      res\r\n        .status(200)\r\n        .json({ message: 'course updated successfully', updateCourse });\r\n    } catch (error) {\r\n      res.status(500).json({ message: COURSE_UPDATE_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: updateCourseValidator,\r\n  middleware: [upload.single('courseImg'), checkPermission(\"UpdateCourse\")] // Ensure correct field name\r\n});\r\n\r\n// Delete course Endpoint\r\nexport const deleteCourseEndpoint = new Endpoint({\r\n  path: '/course/:id',\r\n  method: EndpointMethod.DELETE,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      await deleteCourseHandler(req.params.id, req);\r\n      res.json({ message: 'Course deleted successfully' });\r\n    } catch (error) {\r\n      res.status(500).json({ message: COURSE_DELETION_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: deleteCourseValidator,\r\n  middleware: [checkPermission(\"DeleteCourse\")]\r\n});\r\n"],"mappings":"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","ignoreList":[]}