{"version":3,"file":"class.validator.js","names":["classValidator","exports","classTitle","in","exists","errorMessage","isString","classDescription","optional","moduleId","assignmentName","assignmentFile","materialForClass","totalMarks","assignmentEndDate","getClassByIdValidator","classId","getModuleByIdValidator","updateClassValidator","id","classRecordedLink","deleteClassValidator"],"sources":["../../../src/endpoints/class/class.validator.ts"],"sourcesContent":["import { Schema } from 'express-validator';\r\n\r\n// Validator for creating a class\r\nexport const classValidator: Schema = {\r\n    classTitle: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'Class Title is required'\r\n        },\r\n        isString: {\r\n            errorMessage: 'Class Title must be a string'\r\n        }\r\n    },\r\n    classDescription: {\r\n        in: 'body',\r\n        optional: true,\r\n        isString: {\r\n            errorMessage: 'Class Description must be a string'\r\n        }\r\n    },\r\n    moduleId: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'Module ID is required',\r\n        },\r\n        isString: {\r\n            errorMessage: 'Module ID must be a string',\r\n        }\r\n    },\r\n    assignmentName: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'assignmentName is required'\r\n        }\r\n    },\r\n    assignmentFile: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'assignmentFile is required'\r\n        }\r\n    },\r\n    materialForClass: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'materialForClass is required'\r\n        }\r\n    },\r\n    totalMarks: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'totalMarks is required'\r\n        }\r\n    },\r\n    assignmentEndDate: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'assignmentEndDate is required'\r\n        }\r\n    }\r\n};\r\n\r\n// Validator for getting a class by ID\r\nexport const getClassByIdValidator: Schema = {\r\n    classId: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'classId is required'\r\n        },\r\n        isString: {\r\n            errorMessage: 'classId must be a string'\r\n        }\r\n    }\r\n};\r\n\r\n// Validator for getting a module by ID\r\nexport const getModuleByIdValidator: Schema = {\r\n    moduleId: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'moduleId is required'\r\n        },\r\n        isString: {\r\n            errorMessage: 'moduleId must be a string'\r\n        }\r\n    }\r\n};\r\n\r\n// Validator for updating a class\r\nexport const updateClassValidator: Schema = {\r\n    id: {\r\n        in: 'params',\r\n        exists: {\r\n            errorMessage: 'Class ID is required'\r\n        },\r\n        isString: {\r\n            errorMessage: 'Class ID must be a string'\r\n        }\r\n    },\r\n    classTitle: {\r\n        in: 'body',\r\n        optional: true,\r\n        isString: {\r\n            errorMessage: 'Class Title must be a string'\r\n        }\r\n    },\r\n    classRecordedLink: {\r\n        in: 'body',\r\n        optional: true,\r\n        isString: {\r\n            errorMessage: 'Class Recorded Link must be a string'\r\n        }\r\n    },\r\n    assignmentFile: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'assignmentFile is required'\r\n        }\r\n    },\r\n    materialForClass: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'materialForClass is required'\r\n        }\r\n    },\r\n    totalMarks: {\r\n        in: 'body',\r\n        exists: {\r\n            errorMessage: 'totalMarks is required'\r\n        }\r\n    },\r\n};\r\n\r\n// Validator for deleting a class\r\nexport const deleteClassValidator: Schema = {\r\n    id: {\r\n        in: 'params',\r\n        exists: {\r\n            errorMessage: 'Class ID is required'\r\n        },\r\n        isString: {\r\n            errorMessage: 'Class ID must be a string'\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]}