{"version":3,"file":"users.validator.js","names":["createUserValidator","exports","firstName","in","isString","errorMessage","isLength","options","min","lastName","email","isEmail","normalizeEmail","dateOfBirth","optional","isDate","phoneNumber","matches","password","dateOfJoining","accountStatus","isIn","roleId","updateUserValidator","idValidator","id"],"sources":["../../../src/endpoints/users/users.validator.ts"],"sourcesContent":["import { Schema } from \"express-validator\";\r\n\r\nexport const createUserValidator: Schema = {\r\n  firstName: {\r\n    in: [\"body\"],\r\n    isString: { errorMessage: \"First name must be a string\" },\r\n    isLength: {\r\n      options: { min: 2 },\r\n      errorMessage: \"First name must be at least 2 characters long\",\r\n    },\r\n  },\r\n  lastName: {\r\n    in: [\"body\"],\r\n    isString: { errorMessage: \"Last name must be a string\" },\r\n    isLength: {\r\n      options: { min: 1 },\r\n      errorMessage: \"Last name must be at least 1 characters long\",\r\n    },\r\n  },\r\n  email: {\r\n    in: [\"body\"],\r\n    isEmail: { errorMessage: \"Invalid email format\" },\r\n    normalizeEmail: true,\r\n  },\r\n  dateOfBirth: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isString: { errorMessage: \"Date of birth must be a string\" },\r\n    isDate: {\r\n      errorMessage: 'DateOf Birth must be a valid date',\r\n    }\r\n  },\r\n  phoneNumber: {\r\n    in: [\"body\"],\r\n    isString: { errorMessage: \"Phone number must be a string\" },\r\n    matches: {\r\n      options: /^\\d{10}$/,\r\n      errorMessage: \"Phone number must be 10 digits long\",\r\n    },\r\n  },\r\n  password: {\r\n    in: [\"body\"],\r\n    isString: { errorMessage: \"Password must be a string\" },\r\n    isLength: {\r\n      options: { min: 8 },\r\n      errorMessage: \"Password must be at least 8 characters long\",\r\n    },\r\n  },\r\n  dateOfJoining: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isString: { errorMessage: \"Date of joining must be a string\" },\r\n    isDate: {\r\n      errorMessage: \"Date of joining must be a valid date\",\r\n    },\r\n  },\r\n  accountStatus: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isString: { errorMessage: \"Account status must be a string\" },\r\n    isIn: {\r\n      options: [\"active\", \"inactive\", \"suspended\"],\r\n      errorMessage: \"Invalid account status\",\r\n    },\r\n  },\r\n  roleId: {\r\n    in: [\"body\"],\r\n    isString: { errorMessage: \"Role ID must be an string\" }\r\n  },\r\n};\r\n\r\n// Update User Validator (Partial validation for updates)\r\nexport const updateUserValidator: Schema = {\r\n  firstName: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isString: { errorMessage: \"First name must be a string\" },\r\n    isLength: {\r\n      options: { min: 2 },\r\n      errorMessage: \"First name must be at least 2 characters long\",\r\n    },\r\n  },\r\n  lastName: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isString: { errorMessage: \"Last name must be a string\" },\r\n    isLength: {\r\n      options: { min: 1 },\r\n      errorMessage: \"Last name must be at least 1 characters long\",\r\n    },\r\n  },\r\n  email: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isEmail: { errorMessage: \"Invalid email format\" },\r\n    normalizeEmail: true,\r\n  },\r\n  phoneNumber: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isString: { errorMessage: \"Phone number must be a string\" },\r\n    matches: {\r\n      options: /^\\d{10}$/,\r\n      errorMessage: \"Phone number must be 10 digits long\",\r\n    },\r\n  },\r\n  accountStatus: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isString: { errorMessage: \"Account status must be a string\" },\r\n    isIn: {\r\n      options: [[\"active\", \"inactive\", \"suspended\"]],\r\n      errorMessage: \"Invalid account status\",\r\n    },\r\n  },\r\n  roleId: {\r\n    in: [\"body\"],\r\n    optional: true,\r\n    isString: { errorMessage: \"Role ID must be an string\" }\r\n  },\r\n};\r\n\r\n// ID Validator for endpoints requiring a user ID\r\nexport const idValidator: Schema = {\r\n  id: {\r\n    in: [\"params\"],\r\n    isString: { errorMessage: \"ID must be an string\" }\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]}