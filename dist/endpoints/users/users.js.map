{"version":3,"file":"users.js","names":["_nodeServerEngine","require","_users","_users2","_multer","_interopRequireDefault","_middleware","upload","multer","storage","memoryStorage","createUserEndpoint","exports","Endpoint","path","method","EndpointMethod","POST","handler","req","res","user","createUserHandler","body","success","status","json","message","errors","error","console","authType","EndpointAuthType","JWT","validator","createUserValidator","middleware","checkPermission","single","getAllUsersEndpoint","GET","users","getAllUsersHandler","getUserByIdEndpoint","getUserByIdHandler","params","id","idValidator","updateUserForAdminEndpoint","PUT","userId","updatedData","response","updateUserForAdminHandler","updateUserValidator","updateUserForTraineeEndpoint","log","headers","file","updateUserForTraineeHandler","deleteUserEndpoint","DELETE","deleteUserHandler"],"sources":["../../../src/endpoints/users/users.ts"],"sourcesContent":["import { Endpoint, EndpointAuthType, EndpointMethod } from 'node-server-engine';\r\nimport {\r\n  createUserValidator,\r\n  updateUserValidator,\r\n  idValidator\r\n} from './users.validator';\r\nimport {\r\n  getAllUsersHandler,\r\n  getUserByIdHandler,\r\n  createUserHandler,\r\n  updateUserForAdminHandler,\r\n  updateUserForTraineeHandler,\r\n  deleteUserHandler\r\n} from './users.handler';\r\n\r\nimport multer from 'multer';\r\nimport { checkPermission } from 'middleware';\r\n\r\n// Multer Memory Storage\r\nconst upload = multer({ storage: multer.memoryStorage() });\r\n\r\nexport const createUserEndpoint = new Endpoint({\r\n  path: '/users',\r\n  method: EndpointMethod.POST,\r\n  handler: async (req, res) => {\r\n    try {\r\n     \r\n      const user = await createUserHandler(req, req.body);\r\n\r\n      if (!user || user.success === false) {\r\n        res\r\n          .status(400)\r\n          .json({\r\n            message: 'Failed to create user',\r\n            errors: user?.errors || ['Unknown error occurred.']\r\n          });\r\n        return;\r\n      }\r\n\r\n      res.status(201).json({ message: 'User created successfully', user });\r\n    } catch (error) {\r\n      console.error('Error creating user:', error);\r\n      res\r\n        .status(500)\r\n        .json({\r\n          message: 'Internal server error',\r\n          errors: [(error as Error).message || 'Something went wrong']\r\n        });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: createUserValidator,\r\n  middleware: [checkPermission(\"CreateUser\"), upload.single('profilePic')]\r\n});\r\n\r\n// Get All Users Endpoint\r\nexport const getAllUsersEndpoint = new Endpoint({\r\n  path: '/users',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const users = await getAllUsersHandler();\r\n      res.status(200).json({message: 'Users retrieved successfully', users});\r\n    } catch (error) {\r\n      res.status(500).json({ error: (error as Error).message });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: {},\r\n  middleware: [checkPermission(\"GetUser\")]\r\n});\r\n\r\n// Get User By ID Endpoint\r\nexport const getUserByIdEndpoint = new Endpoint({\r\n  path: '/users/:id',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const user = await getUserByIdHandler(req.params.id);\r\n      if (!user) {\r\n        res.status(404).json({ message: 'User not found' });\r\n      }\r\n      res.json(user);\r\n    } catch (error) {\r\n      res.status(500).json({ error: (error as Error).message });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: idValidator,\r\n  middleware: [checkPermission(\"GetUser\")]\r\n});\r\n\r\n// Update User Endpoint\r\n// export const updateUserEndpoint = new Endpoint({\r\n//   path: '/users/:id',\r\n//   method: EndpointMethod.PUT,\r\n//   handler: async (req, res): Promise<void> => {\r\n//     try {\r\n//       console.log('Headers:', req.headers);\r\n//       console.log('Body:', req.body);\r\n//       console.log('File:', req.file);\r\n\r\n//       // Pass both form-data fields and the uploaded file\r\n//       const response = await updateUserHandler(\r\n//         req,\r\n//         req.params.id,\r\n//         req.body,\r\n//         req.file\r\n//       );\r\n\r\n//       res.status(200).json(response);\r\n//     } catch (error) {\r\n//       console.error('Error updating user:', error);\r\n//       res\r\n//         .status(500)\r\n//         .json({ error: (error as Error).message || 'Internal server error' });\r\n//     }\r\n//   },\r\n//   authType: EndpointAuthType.JWT,\r\n//   validator: updateUserValidator,\r\n//   middleware: [checkPermission(\"UpdateUser\"),upload.single('profilePic')] // Add Multer Middleware for File Uploads\r\n// });\r\n\r\n//Update User For Admin\r\nexport const updateUserForAdminEndpoint = new Endpoint({\r\n  path: \"/userForAdmin/:id\",\r\n  method: EndpointMethod.PUT,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const userId = req.params.id;\r\n      const updatedData = req.body;\r\n \r\n      // Call the update handler\r\n      const response = await updateUserForAdminHandler(req, userId, updatedData);\r\n \r\n      res.status(200).json(response);\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n      res.status(500).json({ error: (error as Error).message || \"Internal server error\" });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: updateUserValidator,\r\n  middleware: [checkPermission(\"UpdateUser\")],\r\n});\r\n\r\n// Update User for Trainee Endpoint\r\nexport const updateUserForTraineeEndpoint = new Endpoint({\r\n  path: '/userForTrainee/:id',\r\n  method: EndpointMethod.PUT,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      console.log('Headers:', req.headers);\r\n      console.log('Body:', req.body);\r\n      console.log('File:', req.file);\r\n \r\n      // Pass both form-data fields and the uploaded file\r\n      const response = await updateUserForTraineeHandler(\r\n        req,\r\n        req.params.id,\r\n        req.body,\r\n        req.file\r\n      );\r\n \r\n      res.status(200).json(response);\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      res\r\n        .status(500)\r\n        .json({ error: (error as Error).message || 'Internal server error' });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: updateUserValidator,\r\n  middleware: [checkPermission('UpdateUser'), upload.single('profilePic')] // Multer Middleware for File Uploads\r\n});\r\n\r\n// Delete User Endpoint\r\nexport const deleteUserEndpoint = new Endpoint({\r\n  path: '/users/:id',\r\n  method: EndpointMethod.DELETE,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      await deleteUserHandler(req, req.params.id);\r\n      res.json({ message: 'User deleted successfully' });\r\n    } catch (error) {\r\n      res.status(500).json({ error: (error as Error).message });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: idValidator,\r\n  middleware: [checkPermission(\"DeleteUser\")]\r\n});\r\n"],"mappings":"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","ignoreList":[]}