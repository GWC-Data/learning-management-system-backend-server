{"version":3,"file":"batch.js","names":["_nodeServerEngine","require","_Batch","_batch","_middleware","_batch2","createBatchEndpoint","exports","Endpoint","path","method","EndpointMethod","POST","handler","req","res","batch","createBatchTable","body","status","json","message","error","BATCH_CREATION_ERROR","authType","EndpointAuthType","JWT","validator","createBatchValidator","middleware","checkPermission","getBatchEndpoint","GET","getAllBatchesHandler","BATCH_NOT_FOUND","BATCH_GET_ERROR","getBatchDetailsEndpoint","id","params","getBatchDetailsHandler","getBatchByBatchNameEndpoint","batchName","batchData","getBatchByBatchNameHandler","getBatchIdsByTraineeIdEndpoint","batchIds","getBatchIdsByTraineeIdHandler","updateBatchEndpoint","PUT","updateRole","updateBatchesHandler","BATCH_UPDATE_ERROR","updateBatchValidator","deleteBatchEndpoint","DELETE","deleteBatchHandler","BATCH_DELETION_ERROR","deleteBatchValidator"],"sources":["../../../src/endpoints/batch/batch.ts"],"sourcesContent":["import { Endpoint, EndpointMethod, EndpointAuthType } from \"node-server-engine\";\r\nimport {\r\n  getBatchDetailsHandler,\r\n  createBatchTable,\r\n  getAllBatchesHandler,\r\n  getBatchIdsByTraineeIdHandler,\r\n  updateBatchesHandler,\r\n  deleteBatchHandler,\r\n  getBatchByBatchNameHandler\r\n} from './Batch.handler';\r\nimport {\r\n  createBatchValidator,\r\n  updateBatchValidator,\r\n  deleteBatchValidator,\r\n} from './batch.validator';\r\nimport { checkPermission } from 'middleware';\r\nimport {\r\n  BATCH_CREATION_ERROR,\r\n  BATCH_GET_ERROR,\r\n  BATCH_NOT_FOUND,\r\n  BATCH_DELETION_ERROR,\r\n  BATCH_UPDATE_ERROR\r\n} from \"./batch.const\";\r\n\r\n// Create Batch Endpoint\r\nexport const createBatchEndpoint = new Endpoint({\r\n  path: '/batch',\r\n  method: EndpointMethod.POST,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const batch = await createBatchTable(req, req.body);\r\n\r\n      res.status(201).json({ message: 'Batch created successfully', batch });\r\n    } catch (error) {\r\n      res.status(500).json({ message: BATCH_CREATION_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: createBatchValidator,\r\n  middleware: [checkPermission('CreateBatch')]\r\n});\r\n\r\n// Get All Batch Endpoint\r\nexport const getBatchEndpoint = new Endpoint({\r\n  path: '/batch',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const batch = await getAllBatchesHandler();\r\n\r\n      if (!batch) {\r\n        res.status(404).json({ message: BATCH_NOT_FOUND });\r\n        return;\r\n      }\r\n\r\n      res.status(200).json({ message: 'Batch retrieved successfully', batch });\r\n    } catch (error) {\r\n      res.status(500).json({ message: BATCH_GET_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: {},\r\n  middleware: [checkPermission('GetBatch')]\r\n});\r\n\r\n\r\nexport const getBatchDetailsEndpoint = new Endpoint({\r\n  path: '/batch/:id',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    const { id } = req.params;\r\n\r\n    try {\r\n      const batch = await getBatchDetailsHandler(id);\r\n\r\n      res.status(200).json({ message: 'Batch retrieved successfully', batch });\r\n    } catch (error) {\r\n      res.status(404).json({ message: BATCH_NOT_FOUND, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: {},\r\n  middleware: [checkPermission('GetBatch')]\r\n});\r\n\r\nexport const getBatchByBatchNameEndpoint = new Endpoint({\r\n  path: \"/batchbyName/:batchName\",\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    const { batchName } = req.params;\r\n\r\n    try {\r\n      const batchData = await getBatchByBatchNameHandler(batchName);\r\n      res.status(200).json({ message: \"Batch retrieved successfully\", batch: batchData });\r\n    } catch (error) {\r\n      res.status(404).json({ message: \"Batch not found\", error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: {},\r\n});\r\n\r\n\r\nexport const getBatchIdsByTraineeIdEndpoint = new Endpoint({\r\n  path: '/batchTrainee/:id',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    const { id } = req.params;\r\n\r\n    try {\r\n      const batchIds = await getBatchIdsByTraineeIdHandler(id);\r\n\r\n      res.status(200).json({ message: 'Batches retrieved successfully', batchIds });\r\n    } catch (error) {\r\n      res.status(404).json({ message: 'No batches found for this trainee', error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: {},\r\n  middleware: [checkPermission('GetBatch')],\r\n});\r\n\r\n\r\n// update Batch endpoint\r\nexport const updateBatchEndpoint = new Endpoint({\r\n  path: '/batch/:id',\r\n  method: EndpointMethod.PUT,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const updateRole = await updateBatchesHandler(req.params.id, req, req.body);\r\n      res.status(200).json({ message: 'Batch updated successfully', updateRole });\r\n    } catch (error) {\r\n      res.status(500).json({ message: BATCH_UPDATE_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: updateBatchValidator,\r\n  middleware: [checkPermission('UpdateBatch')]\r\n});\r\n\r\n\r\n// delete Batch endpoint\r\nexport const deleteBatchEndpoint = new Endpoint({\r\n  path: '/batch/:id',\r\n  method: EndpointMethod.DELETE,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      await deleteBatchHandler(req, req.params.id);\r\n      res.status(200).json({ message: 'Batch deleted successfully' });\r\n    } catch (error) {\r\n      res.status(500).json({ message: BATCH_DELETION_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: deleteBatchValidator,\r\n  middleware: [checkPermission('DeleteBatch')]\r\n});"],"mappings":"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","ignoreList":[]}