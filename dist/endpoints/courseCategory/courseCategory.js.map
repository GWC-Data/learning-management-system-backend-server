{"version":3,"file":"courseCategory.js","names":["_nodeServerEngine","require","_multer","_interopRequireDefault","_courseCategory","_courseCategory2","_courseCategory3","_middleware","upload","multer","storage","memoryStorage","createCourseCategoryEndpoint","exports","Endpoint","path","method","EndpointMethod","POST","authType","EndpointAuthType","JWT","validator","createCourseCategoryValidator","middleware","single","checkPermission","handler","req","res","console","log","headers","body","file","coursecategoryName","status","json","error","response","createCourseCategoryHandler","success","message","courseCategoryId","courseCategoryImg","coursecategoryImg","getAllCourseCategoryEndpoint","GET","coursecategory","getAllCourseCategoriesHandler","COURSECATEGORY_NOT_FOUND","COURSECATEGORY_GET_ERROR","NONE","getCourseCategoryByIdEndpoint","getCourseCategoryByIdHandler","params","id","getCourseCategoryByIdValidator","updateCourseCategoryByIdEndpoint","PUT","updateRole","updateCourseCategoryHandler","COURSECATEGORY_UPDATE_ERROR","updateCourseCategoryValidator","deleteCourseCategoryEndpoint","DELETE","deleteCourseCategoryHandler","COURSECATEGORY_DELETION_ERROR","deleteCourseCategoryValidator"],"sources":["../../../src/endpoints/courseCategory/courseCategory.ts"],"sourcesContent":["import { Endpoint, EndpointAuthType, EndpointMethod } from 'node-server-engine';\r\nimport multer from 'multer';\r\nimport { Request, Response } from 'express';\r\nimport {\r\n  createCourseCategoryHandler,\r\n  updateCourseCategoryHandler,\r\n  getCourseCategoryByIdHandler,\r\n  deleteCourseCategoryHandler,\r\n  getAllCourseCategoriesHandler\r\n} from './courseCategory.handler';\r\n\r\nimport {\r\n  createCourseCategoryValidator,\r\n  updateCourseCategoryValidator,\r\n  deleteCourseCategoryValidator,\r\n  getCourseCategoryByIdValidator\r\n} from './courseCategory.validator';\r\n\r\nimport {\r\n  COURSECATEGORY_NOT_FOUND,\r\n  COURSECATEGORY_CREATION_ERROR,\r\n  COURSECATEGORY_UPDATE_ERROR,\r\n  COURSECATEGORY_DELETION_ERROR,\r\n  COURSECATEGORY_GET_ERROR\r\n} from './courseCategory.const';\r\nimport { checkPermission } from 'middleware';\r\n// Multer Memory Storage for handling file uploads\r\nconst upload = multer({ storage: multer.memoryStorage() });\r\n\r\n// Create CourseCategory Endpoint\r\n// export const createCourseCategoryEndpoint = new Endpoint({\r\n//   path: '/coursecategory',\r\n//   method: EndpointMethod.POST,\r\n//   authType: EndpointAuthType.JWT,\r\n//   validator: createCourseCategoryValidator,\r\n//   middleware: [upload.single('coursecategoryImg'), checkPermission(\"CreateCategory\")],\r\n//   handler: async (req: Request, res: Response): Promise<void> => {\r\n//     try {\r\n//       console.log('Incoming request:', {\r\n//         headers: req.headers,\r\n//         body: req.body,\r\n//         file: req.file // Log file details\r\n//       });\r\n\r\n//       // Ensure coursecategoryName is present\r\n//       if (!req.body.coursecategoryName) {\r\n//         res.status(400).json({ error: 'Course Category Name is required' });\r\n//       }\r\n\r\n//       // Call handler with request body and file\r\n//       const response = await createCourseCategoryHandler(req, req.body, req.file);\r\n\r\n//       if (!response.success) {\r\n//         res.status(400).json({ error: response.message });\r\n//       }\r\n\r\n//       res.status(201).json({\r\n//         message: 'Course category created successfully',\r\n//         courseCategoryId: response.courseCategoryId,\r\n//         courseCategoryImg: response.coursecategoryImg\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error creating course category:', error);\r\n//       res.status(500).json({ message: COURSECATEGORY_CREATION_ERROR, error });\r\n//     }\r\n//   }\r\n// });\r\n\r\nexport const createCourseCategoryEndpoint = new Endpoint({\r\n  path: \"/coursecategory\",\r\n  method: EndpointMethod.POST,\r\n  authType: EndpointAuthType.JWT,\r\n  validator: createCourseCategoryValidator,\r\n  middleware: [\r\n    upload.single(\"coursecategoryImg\"), \r\n    checkPermission(\"CreateCategory\"),\r\n  ],\r\n  handler: async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      console.log(\"Incoming request:\", {\r\n        headers: req.headers,\r\n        body: req.body,\r\n        file: req.file, \r\n      });\r\n\r\n      // Ensure coursecategoryName is present\r\n      if (!req.body.coursecategoryName) {\r\n        res.status(400).json({ error: \"Course Category Name is required\" });\r\n        return;\r\n      }\r\n\r\n      const response = await createCourseCategoryHandler(req, req.body, req.file);\r\n\r\n      if (!response.success) {\r\n        res.status(400).json({ error: response.message });\r\n        return;\r\n      }\r\n\r\n      res.status(201).json({\r\n        message: response.message,\r\n        courseCategoryId: response.courseCategoryId,\r\n        courseCategoryImg: response.coursecategoryImg,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating course category:\", error);\r\n      res.status(500).json({ message: \"Error creating course category\", error });\r\n    }\r\n  },\r\n});\r\n\r\n\r\n// Get All CourseCategory Endpoint\r\nexport const getAllCourseCategoryEndpoint = new Endpoint({\r\n  path: '/coursecategory',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const coursecategory = await getAllCourseCategoriesHandler();\r\n\r\n      if (!coursecategory) {\r\n        res.status(404).json({ message: COURSECATEGORY_NOT_FOUND });\r\n        return;\r\n      }\r\n\r\n      res.status(200).json({\r\n        message: 'CourseCategory retrieved successfully',\r\n        coursecategory\r\n      });\r\n    } catch (error) {\r\n      res.status(500).json({ message: COURSECATEGORY_GET_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.NONE,\r\n  validator: {},\r\n});\r\n\r\n// Get CourseCategory By ID Endpoint\r\nexport const getCourseCategoryByIdEndpoint = new Endpoint({\r\n  path: '/coursecategory/:id',\r\n  method: EndpointMethod.GET,\r\n  handler: async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      const coursecategory = await getCourseCategoryByIdHandler(req.params.id);\r\n      res.status(200).json({\r\n        message: 'CourseCategory retrieved successfully',\r\n        coursecategory\r\n      });\r\n    } catch (error) {\r\n      res.status(404).json({ message: COURSECATEGORY_NOT_FOUND, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: getCourseCategoryByIdValidator,\r\n  middleware: [checkPermission(\"GetCategory\")],\r\n\r\n});\r\n\r\n// Update course category Endpoint\r\nexport const updateCourseCategoryByIdEndpoint = new Endpoint({\r\n  path: '/coursecategory/:id',\r\n  method: EndpointMethod.PUT,\r\n\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      const updateRole = await updateCourseCategoryHandler(\r\n        req.params.id,\r\n        req,\r\n        req.body,\r\n      );\r\n      res\r\n        .status(200)\r\n        .json({ message: 'courseCategory updated successfully', updateRole });\r\n    } catch (error) {\r\n      res.status(500).json({ message: COURSECATEGORY_UPDATE_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: updateCourseCategoryValidator,\r\n  middleware: [upload.single('coursecategoryImg'), checkPermission(\"UpdateCategory\")] // Ensure correct field name\r\n});\r\n\r\n// Delete coursecategory Endpoint\r\nexport const deleteCourseCategoryEndpoint = new Endpoint({\r\n  path: '/coursecategory/:id',\r\n  method: EndpointMethod.DELETE,\r\n  handler: async (req, res): Promise<void> => {\r\n    try {\r\n      await deleteCourseCategoryHandler(req.params.id, req);\r\n      res.json({ message: 'CourseCategory deleted Successfully'});\r\n    } catch (error) {\r\n      res.status(500).json({ message: COURSECATEGORY_DELETION_ERROR, error });\r\n    }\r\n  },\r\n  authType: EndpointAuthType.JWT,\r\n  validator: deleteCourseCategoryValidator,\r\n  middleware: [checkPermission(\"DeleteCategory\")] // Corrected validator\r\n});\r\n"],"mappings":"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","ignoreList":[]}